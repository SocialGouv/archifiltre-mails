name: CD
on:
  workflow_run:
    workflows:
      - CI
    branches: [main, dev, beta, feature/release-ci]
    types:
      - completed

env:
  GIT_AUTHOR_EMAIL: ${{ secrets.SOCIALGROOVYBOT_EMAIL }}
  GIT_AUTHOR_NAME: ${{ secrets.SOCIALGROOVYBOT_NAME }}
  GIT_COMMITTER_EMAIL: ${{ secrets.SOCIALGROOVYBOT_EMAIL }}
  GIT_COMMITTER_NAME: ${{ secrets.SOCIALGROOVYBOT_NAME }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  Dist:
    name: Compile
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - uses: actions/checkout@v2
      - name: Setup Node
        uses: ./.github/actions/setup-node
      - name: Bump version
        run: yarn semantic-release
        env:
          ARCHIMAIL_RELEASE_MODE: version
      - name: Compile
        run: yarn compile
      - name: Archive dist
        uses: actions/upload-artifact@v2
        with:
          name: compile-dist
          path: dist/

  Build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    needs: Dist
    strategy:
      matrix:
        target:
          - linux
          - mac
          - win32
          - win32-msi
          - win64
          - win64-msi
        include:
          - target: linux
            os: ubuntu-latest
          - target: mac
            os: macos-latest
          - target: win32
            os: windows-latest
          - target: win32-msi
            os: windows-latest
          - target: win64
            os: windows-latest
          - target: win64-msi
            os: windows-latest

    name: Build binary for ${{ matrix.target }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      WIN_CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
      WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
      CSC_LINK: ${{ secrets.CSC_LINK }}
      CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}

    steps:
      - uses: actions/checkout@v2
      - name: Setup Node
        uses: ./.github/actions/setup-node
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: compile-dist
          path: dist/
      - name: Build bin
        run: yarn dist:${{ matrix.target }}
      - name: Archive bin
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}-bin
          path: electron/dist/*/archifiltre.@(exe|dmg|AppImage)

  Release:
    needs: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Download all dist form build jobs
        uses: actions/download-artifact@v2
        with:
          path: bin
      - name: Generate hashes
        run: >-
          find -E .
          -regex ".*/bin/.*/archimail\.(exe|AppImage|dmg)$"
          -type f
          -exec bash -c "openssl dgst -sha512 {} > {}.sha512" \;
      - name: Setup Node
        uses: ./.github/actions/setup-node
      - name: Semantic Release
        run: yarn semantic-release
